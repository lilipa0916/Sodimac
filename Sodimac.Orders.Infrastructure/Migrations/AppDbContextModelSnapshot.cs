// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sodimac.Orders.Infrastructure.Persistence;

#nullable disable

namespace Sodimac.Orders.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2025, 8, 24, 18, 52, 47, 720, DateTimeKind.Local).AddTicks(5875));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = true,
                            Direccion = "Av. Las Condes 1234, Las Condes, Santiago",
                            Email = "juan.perez@email.com",
                            FechaCreacion = new DateTime(2025, 8, 24, 23, 52, 47, 721, DateTimeKind.Utc).AddTicks(8860),
                            Nombre = "Juan Carlos Pérez"
                        },
                        new
                        {
                            Id = 2,
                            Activo = true,
                            Direccion = "Calle San Martín 567, Providencia, Santiago",
                            Email = "maria.gonzalez@email.com",
                            FechaCreacion = new DateTime(2025, 8, 24, 23, 52, 47, 721, DateTimeKind.Utc).AddTicks(8865),
                            Nombre = "María González López"
                        },
                        new
                        {
                            Id = 3,
                            Activo = true,
                            Direccion = "Av. Libertador Bernardo O'Higgins 890, Santiago Centro",
                            Email = "roberto.silva@email.com",
                            FechaCreacion = new DateTime(2025, 8, 24, 23, 52, 47, 721, DateTimeKind.Utc).AddTicks(8867),
                            Nombre = "Roberto Silva Martínez"
                        },
                        new
                        {
                            Id = 4,
                            Activo = true,
                            Direccion = "Calle Manuel Montt 321, Ñuñoa, Santiago",
                            Email = "ana.rodriguez@email.com",
                            FechaCreacion = new DateTime(2025, 8, 24, 23, 52, 47, 721, DateTimeKind.Utc).AddTicks(8870),
                            Nombre = "Ana Patricia Rodríguez"
                        },
                        new
                        {
                            Id = 5,
                            Activo = true,
                            Direccion = "Av. Pedro de Valdivia 654, Vitacura, Santiago",
                            Email = "carlos.morales@email.com",
                            FechaCreacion = new DateTime(2025, 8, 24, 23, 52, 47, 721, DateTimeKind.Utc).AddTicks(8872),
                            Nombre = "Carlos Eduardo Morales"
                        });
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.DeliveryRoute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaEntregaReal")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreRuta")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliveryStatusId");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("DeliveryRoutes", (string)null);
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.DeliveryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("EsEstadoFinal")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Pedido creado, pendiente de asignación",
                            EsEstadoFinal = false,
                            Nombre = "Pendiente"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Pedido asignado a ruta de entrega",
                            EsEstadoFinal = false,
                            Nombre = "Asignado"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Pedido en camino al cliente",
                            EsEstadoFinal = false,
                            Nombre = "En Tránsito"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Pedido entregado exitosamente",
                            EsEstadoFinal = true,
                            Nombre = "Entregado"
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Pedido cancelado",
                            EsEstadoFinal = true,
                            Nombre = "Cancelado"
                        });
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("FechaPedido");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.DeliveryRoute", b =>
                {
                    b.HasOne("Sodimac.Orders.Domain.Entities.DeliveryStatus", "Estado")
                        .WithMany("Rutas")
                        .HasForeignKey("DeliveryStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sodimac.Orders.Domain.Entities.Pedido", "Pedido")
                        .WithOne("RutaEntrega")
                        .HasForeignKey("Sodimac.Orders.Domain.Entities.DeliveryRoute", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("Sodimac.Orders.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Producto", b =>
                {
                    b.HasOne("Sodimac.Orders.Domain.Entities.Pedido", "Pedido")
                        .WithMany("Productos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.DeliveryStatus", b =>
                {
                    b.Navigation("Rutas");
                });

            modelBuilder.Entity("Sodimac.Orders.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("RutaEntrega");
                });
#pragma warning restore 612, 618
        }
    }
}
